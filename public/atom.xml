<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The wind</title>
  
  <subtitle>做人不卖萌跟咸鱼有什么区别</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-20T08:57:20.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Hackshen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git篇</title>
    <link href="http://yoursite.com/2018/01/20/Git%E7%AF%87/"/>
    <id>http://yoursite.com/2018/01/20/Git篇/</id>
    <published>2018-01-20T08:57:20.000Z</published>
    <updated>2018-01-20T08:57:20.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac下内网穿透</title>
    <link href="http://yoursite.com/2018/01/14/Mac%E4%B8%8B%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>http://yoursite.com/2018/01/14/Mac下内网穿透/</id>
    <published>2018-01-14T10:10:47.000Z</published>
    <updated>2018-01-20T08:55:39.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端环境Mac配置篇</title>
    <link href="http://yoursite.com/2018/01/02/%E5%89%8D%E7%AB%AF%E7%8E%AF%E5%A2%83Mac%E9%85%8D%E7%BD%AE%E7%AF%87/"/>
    <id>http://yoursite.com/2018/01/02/前端环境Mac配置篇/</id>
    <published>2018-01-02T15:13:25.000Z</published>
    <updated>2018-01-20T08:55:39.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h3><ul><li>Homebrews是Mac上的软件包管理工具，可以很方便的安装Python、MySQL、MongoDB、NGINX、nvm、wget等等….</li><li><p>Homebrew安装  </p><ul><li><p>打开终端输入以下命令即可：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure></li><li><p>常用命令：</p><ul><li>搜索软件：brew search nginx</li><li>安装软件：brew install nginx</li><li>卸载软件：brew remove nginx</li></ul></li></ul></li></ul><h3 id="Nvm-amp-Node"><a href="#Nvm-amp-Node" class="headerlink" title="Nvm &amp; Node"></a>Nvm &amp; Node</h3><ul><li><p>Nvm是nodejs版本管理工具，一台操作系统上可以装多个node版本可以随意切换</p></li><li><p>首先安装nvm： </p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nvm</span><br></pre></td></tr></table></figure><p>  安装完成后在你的环境变量里面添加:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=~/.nvm</span><br><span class="line"><span class="built_in">source</span> $(brew --prefix nvm)/nvm.sh</span><br></pre></td></tr></table></figure><p>  如果你使用的是系统默认的bash，那么添加到<code>~/.bash_profile</code>这个文件里面，如果这个文件不存在则新建一个，如果你安装有oh-my-zsh，则添加到<code>~/.zshrc</code>这个文件夹里面，然后重启终端即可，如果不想重启终端直接在终端输入<code>source ~/.zshrc</code>新增配置会立即生效</p></li><li><p>安装node</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install v8.9.0</span><br></pre></td></tr></table></figure></li></ul><ul><li>nvm 常用命令<ul><li>nvm install <version> 安装指定版本</version></li><li>nvm uninstall <version> 卸载已安装的node版本</version></li><li>nvm use <version> 切换已安装的node版本</version></li><li>nvm ls 列出本机已安装的node版本</li><li>nvm ls-remote 列出所有远程服务器可安装的node版本</li><li>nvm current 显示当前正在用的node版本</li><li>nvm alias <name> <version> 给不用的node版本添加别名</version></name></li><li>nvm unalias <name>  ## 删除已定义的别名</name></li></ul></li></ul><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Homebrew&quot;&gt;&lt;a href=&quot;#Homebrew&quot; class=&quot;headerlink&quot; title=&quot;Homebrew&quot;&gt;&lt;/a&gt;Homebrew&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Homebrews是Mac上的软件包管理工具，可以很方便的安装Python、My
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Command</title>
    <link href="http://yoursite.com/2018/01/02/Command/"/>
    <id>http://yoursite.com/2018/01/02/Command/</id>
    <published>2018-01-02T15:12:19.000Z</published>
    <updated>2018-01-20T08:55:39.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac Nginx安装&amp;https</title>
    <link href="http://yoursite.com/2017/12/17/Mac-Nginx%E5%AE%89%E8%A3%85-https/"/>
    <id>http://yoursite.com/2017/12/17/Mac-Nginx安装-https/</id>
    <published>2017-12-16T16:45:59.000Z</published>
    <updated>2018-01-20T08:55:39.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>各种本地一建搭建web服务</title>
    <link href="http://yoursite.com/2017/12/17/%E5%90%84%E7%A7%8D%E6%9C%AC%E5%9C%B0%E4%B8%80%E5%BB%BA%E6%90%AD%E5%BB%BAweb%E6%9C%8D%E5%8A%A1/"/>
    <id>http://yoursite.com/2017/12/17/各种本地一建搭建web服务/</id>
    <published>2017-12-16T16:16:20.000Z</published>
    <updated>2018-01-20T08:55:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python篇"><a href="#Python篇" class="headerlink" title="Python篇"></a>Python篇</h2><h4 id="进入到需要启动web服务的目录执行以下命令即可"><a href="#进入到需要启动web服务的目录执行以下命令即可" class="headerlink" title="进入到需要启动web服务的目录执行以下命令即可"></a>进入到需要启动web服务的目录执行以下命令即可</h4><ul><li><p>Python3(后面8899是指定的端口可以不加)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 8899</span><br></pre></td></tr></table></figure></li><li><p>Python2(后面8899是指定的端口可以不加)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8989</span><br></pre></td></tr></table></figure></li></ul><h2 id="Node篇"><a href="#Node篇" class="headerlink" title="Node篇"></a>Node篇</h2><h2 id="Nginx篇"><a href="#Nginx篇" class="headerlink" title="Nginx篇"></a>Nginx篇</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Python篇&quot;&gt;&lt;a href=&quot;#Python篇&quot; class=&quot;headerlink&quot; title=&quot;Python篇&quot;&gt;&lt;/a&gt;Python篇&lt;/h2&gt;&lt;h4 id=&quot;进入到需要启动web服务的目录执行以下命令即可&quot;&gt;&lt;a href=&quot;#进入到需要启动web
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Chrome打包自己，已安装的插件</title>
    <link href="http://yoursite.com/2017/12/16/Chrome%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%EF%BC%8C%E5%B7%B2%E5%AE%89%E8%A3%85%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2017/12/16/Chrome打包自己，已安装的插件/</id>
    <published>2017-12-16T15:50:10.000Z</published>
    <updated>2018-01-20T08:55:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Chrome打包自己，已安装的插件"><a href="#Chrome打包自己，已安装的插件" class="headerlink" title="Chrome打包自己，已安装的插件"></a>Chrome打包自己，已安装的插件</h2><ul><li>浏览器地址栏输入<code>chrome://extensions/</code>打开安装的扩展程序</li><li><p>进入Chrome插件目录：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~<span class="regexp">/Library/</span>Application Support/Google/Chrome/Default/Extensions/ID,ID换成你插件的ID，比如我电脑上Allow-Control-Allow-Origin这个插件的ID是nlfbmbojpeacfghkpbjhddihlkkiljbi,那我的插件 路径就是<span class="string">`~/Library/Application Support/Google/Chrome/Default/Extensions/nlfbmbojpeacfghkpbjhddihlkkiljbi</span></span><br></pre></td></tr></table></figure></li><li><p>在扩展程序界面选择开发者模式，这时候打包扩展程序这个选项才会显示出来</p></li><li>点击打包扩展程序，在扩展程序根目录输入框中填入第二步的路径，然后点击打包扩展程序，这时候会在打包插件的根目录生成一个crx文件，这就是打包好的插件</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Chrome打包自己，已安装的插件&quot;&gt;&lt;a href=&quot;#Chrome打包自己，已安装的插件&quot; class=&quot;headerlink&quot; title=&quot;Chrome打包自己，已安装的插件&quot;&gt;&lt;/a&gt;Chrome打包自己，已安装的插件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;浏览器地
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Browsersync</title>
    <link href="http://yoursite.com/2017/07/19/Browsersync/"/>
    <id>http://yoursite.com/2017/07/19/Browsersync/</id>
    <published>2017-07-19T11:55:19.000Z</published>
    <updated>2018-01-20T08:55:39.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h3><h5 id="BrowserSync-是一个同步多浏览器页面测试工具。更重要的是-Browsersync可以同时在PC、平板、手机等设备下进项调试。"><a href="#BrowserSync-是一个同步多浏览器页面测试工具。更重要的是-Browsersync可以同时在PC、平板、手机等设备下进项调试。" class="headerlink" title="BrowserSync 是一个同步多浏览器页面测试工具。更重要的是 Browsersync可以同时在PC、平板、手机等设备下进项调试。"></a>BrowserSync 是一个同步多浏览器页面测试工具。更重要的是 Browsersync可以同时在PC、平板、手机等设备下进项调试。</h5><h2 id="1、5分钟快速入门"><a href="#1、5分钟快速入门" class="headerlink" title="1、5分钟快速入门"></a>1、5分钟快速入门</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g browser-sync</span><br></pre></td></tr></table></figure><h2 id="2、启动-BrowserSync"><a href="#2、启动-BrowserSync" class="headerlink" title="2、启动 BrowserSync"></a>2、启动 BrowserSync</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个基本用途是，如果您只希望在对某个css文件进行修改后会同步到浏览器里。那么您只需要运行命令行工具，进入到该项目（目录）下，并运行相应的命令：</span><br></pre></td></tr></table></figure><h3 id="静态网站"><a href="#静态网站" class="headerlink" title="静态网站"></a>静态网站</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">如果您想要监听.css文件, 您需要使用服务器模式。 BrowserSync 将启动一个小型服务器，并提供一个URL来查看您的网站。</span><br><span class="line"><span class="comment">// --files 路径是相对于运行该命令的项目（目录） </span></span><br><span class="line">browser-sync start --server --files <span class="string">"css/*.css"</span></span><br><span class="line">如果您需要监听多个类型的文件，您只需要用逗号隔开。例如我们再加入一个.html文件</span><br><span class="line"><span class="comment">// --files 路径是相对于运行该命令的项目（目录） </span></span><br><span class="line">browser-sync start --server --files <span class="string">"css/*.css, *.html"</span></span><br><span class="line"><span class="comment">// 如果你的文件层级比较深，您可以考虑使用 **（表示任意目录）匹配，任意目录下任意.css 或 .html文件。 </span></span><br><span class="line">browser-sync start --server --files <span class="string">"**/*.css, **/*.html"</span></span><br></pre></td></tr></table></figure><h3 id="动态网站"><a href="#动态网站" class="headerlink" title="动态网站"></a>动态网站</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">如果您已经有其他本地服务器环境PHP或类似的，您需要使用代理模式。 BrowserSync将通过代理URL(localhost:<span class="number">3000</span>)来查看您的网站。</span><br><span class="line"><span class="comment">// 主机名可以是ip或域名</span></span><br><span class="line">browser-sync start --proxy <span class="string">"主机名"</span> <span class="string">"css/*.css"</span></span><br><span class="line">在本地创建了一个PHP服务器环境，并通过绑定Browsersync.cn来访问本地服务器，使用以下命令方式，Browsersync将提供一个新的地址localhost:<span class="number">3000</span>来访问Browsersync.cn，并监听其css目录下的所有css文件。</span><br><span class="line">browser-sync start --proxy <span class="string">"Browsersync.cn"</span> <span class="string">"css/*.css"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;简介：&quot;&gt;&lt;a href=&quot;#简介：&quot; class=&quot;headerlink&quot; title=&quot;简介：&quot;&gt;&lt;/a&gt;简介：&lt;/h3&gt;&lt;h5 id=&quot;BrowserSync-是一个同步多浏览器页面测试工具。更重要的是-Browsersync可以同时在PC、平板、手机等设备
      
    
    </summary>
    
      <category term="Gulp" scheme="http://yoursite.com/categories/Gulp/"/>
    
    
      <category term="browsersync" scheme="http://yoursite.com/tags/browsersync/"/>
    
  </entry>
  
  <entry>
    <title>Fiddler</title>
    <link href="http://yoursite.com/2017/07/19/Fiddler/"/>
    <id>http://yoursite.com/2017/07/19/Fiddler/</id>
    <published>2017-07-19T11:54:46.000Z</published>
    <updated>2018-01-20T08:55:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、What-Fiddler"><a href="#1、What-Fiddler" class="headerlink" title="1、What Fiddler"></a>1、What Fiddler</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一种Web调试工具。</span><br><span class="line">可以记录所有客户端和服务器的http和https请求。</span><br><span class="line">允许监视、设置断点、修改输入输出数据。</span><br></pre></td></tr></table></figure><h2 id="2、Fiddler的工作原理"><a href="#2、Fiddler的工作原理" class="headerlink" title="2、Fiddler的工作原理"></a>2、Fiddler的工作原理</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Fiddler 是以代理web服务器的形式工作的，它使用代理地址:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>，端口:<span class="number">8888</span>。当Fiddler退出的时候它会自动注销，这样就不会影响别的程序。不过如果Fiddler非正常退出，这时候因为Fiddler没有自动注销，会造成网页无法访问。解决的办法是重新启动下Fiddler。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、What-Fiddler&quot;&gt;&lt;a href=&quot;#1、What-Fiddler&quot; class=&quot;headerlink&quot; title=&quot;1、What Fiddler&quot;&gt;&lt;/a&gt;1、What Fiddler&lt;/h2&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="Tools" scheme="http://yoursite.com/categories/Tools/"/>
    
    
      <category term="Fiddler" scheme="http://yoursite.com/tags/Fiddler/"/>
    
  </entry>
  
  <entry>
    <title>Gulp-Livereload</title>
    <link href="http://yoursite.com/2017/07/19/Gulp-Livereload/"/>
    <id>http://yoursite.com/2017/07/19/Gulp-Livereload/</id>
    <published>2017-07-19T10:12:13.000Z</published>
    <updated>2018-01-20T08:55:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h2><p> <strong>gulp-liereload是一个监听的文件发生改变时，浏览器会自动加载修改的文件，帮你自动刷新网页，彻底解放F5</strong> </p><h3 id="1、本地安装："><a href="#1、本地安装：" class="headerlink" title="1、本地安装："></a>1、本地安装：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp -g</span><br><span class="line">npm install gulp -D  </span><br><span class="line">npm install gulp-less -D</span><br><span class="line">npm install gulp-livereload -D</span><br></pre></td></tr></table></figure><h3 id="2、配置gulpfile-js"><a href="#2、配置gulpfile-js" class="headerlink" title="2、配置gulpfile.js"></a>2、配置gulpfile.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>), <span class="comment">//引入gulp</span></span><br><span class="line">    less = <span class="built_in">require</span>(<span class="string">'gulp-less'</span>), <span class="comment">//引入less</span></span><br><span class="line">    livereload = <span class="built_in">require</span>(<span class="string">'gulp-livereload'</span>); <span class="comment">//引入livereload</span></span><br><span class="line"> </span><br><span class="line">gulp.task(<span class="string">'less'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//建一个less任务</span></span><br><span class="line">    gulp.src(<span class="string">'src/less/*.less'</span>) <span class="comment">//选择src/less/下面所有已less结尾的文件</span></span><br><span class="line">        .pipe(less()) <span class="comment">//编译less</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">'src/css'</span>)) <span class="comment">//编译后传到src/css目录下</span></span><br><span class="line">        .pipe(livereload()); <span class="comment">//加载修改的文件</span></span><br><span class="line">&#125;);</span><br><span class="line">gulp.task(<span class="string">'watch'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//新建一个watch任务</span></span><br><span class="line">    livereload.listen();  </span><br><span class="line">    gulp.watch(<span class="string">'src/less/**/*.less'</span>, [<span class="string">'less'</span>]); <span class="comment">//监听src/less下的less是否改变，然后执行less任务</span></span><br><span class="line">    gulp.watch(<span class="string">'src/**/*.*'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        livereload.changed(event.path); <span class="comment">//把修改文件的路径输出到控制台</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="3、安装chrome插件"><a href="#3、安装chrome插件" class="headerlink" title="3、安装chrome插件"></a>3、安装chrome插件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在谷歌商店里面搜索livereload下载并安装</span><br></pre></td></tr></table></figure><h3 id="4、执行任务"><a href="#4、执行任务" class="headerlink" title="4、执行任务"></a>4、执行任务</h3><ul><li>在当前目录打开命令行输入 gulp watch</li><li>然后在浏览器打开你的网页地址，必须以服务的形式打开比如：localhost/xx.html然后激活刚才安装的插件，（鼠标点击一下，里面的圆点变为实心即可）</li><li>这时你就可以快乐的写代码了</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介：&quot;&gt;&lt;a href=&quot;#简介：&quot; class=&quot;headerlink&quot; title=&quot;简介：&quot;&gt;&lt;/a&gt;简介：&lt;/h2&gt;&lt;p&gt; &lt;strong&gt;gulp-liereload是一个监听的文件发生改变时，浏览器会自动加载修改的文件，帮你自动刷新网页，彻底解放F5
      
    
    </summary>
    
      <category term="Gulp" scheme="http://yoursite.com/categories/Gulp/"/>
    
    
      <category term="gulp" scheme="http://yoursite.com/tags/gulp/"/>
    
      <category term="livereload" scheme="http://yoursite.com/tags/livereload/"/>
    
  </entry>
  
  <entry>
    <title>About跨域</title>
    <link href="http://yoursite.com/2017/07/18/About%E8%B7%A8%E5%9F%9F/"/>
    <id>http://yoursite.com/2017/07/18/About跨域/</id>
    <published>2017-07-18T04:22:47.000Z</published>
    <updated>2018-01-20T08:55:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、Ajax-PHP-跨域问题（服务端方案）"><a href="#1、Ajax-PHP-跨域问题（服务端方案）" class="headerlink" title="1、Ajax + PHP 跨域问题（服务端方案）"></a>1、Ajax + PHP 跨域问题（服务端方案）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、指定域名(http:<span class="comment">//www.aipay.org),只需要在请求的文件头中添如下代码</span></span><br><span class="line"></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Origin:http://www.aipay.org'</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、允许所有域名都可以访问,只需要在请求的文件头中添如下代码</span><br><span class="line"></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Origin:*'</span>);</span><br></pre></td></tr></table></figure><h2 id="2、Ajax-PHP-跨域问题（通过客户端解决方案）"><a href="#2、Ajax-PHP-跨域问题（通过客户端解决方案）" class="headerlink" title="2、Ajax + PHP 跨域问题（通过客户端解决方案）"></a>2、Ajax + PHP 跨域问题（通过客户端解决方案）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>PHP代码：</span><br><span class="line">&lt;?php </span><br><span class="line">$cb=$_GET[<span class="string">'callback'</span>];</span><br><span class="line">echo $cb.<span class="string">'(&#123;"name":"张三"&#125;)'</span>;</span><br><span class="line">?&gt;</span><br><span class="line"><span class="number">2.</span>HTML代码：</span><br><span class="line">&lt;script src=<span class="string">"http://cdn.bootcss.com/jquery/2.1.0-rc1/jquery.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$.getJSON(<span class="string">'http://www.aipay.org/jsops/jsonp.php?callback=?'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、JSONP解决跨域问题"><a href="#3、JSONP解决跨域问题" class="headerlink" title="3、JSONP解决跨域问题"></a>3、JSONP解决跨域问题</h2><p><strong>方案一：</strong>  通过getJSON,?后面会生成一个jQuery开头的随机函数名如<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">jQuery210101981845619370246_1500012205578如果我们想自己定义函数名呢看方案二</span><br><span class="line">&lt;script src=<span class="string">"http://cdn.bootcss.com/jquery/2.1.0-rc1/jquery.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $.getJSON(<span class="string">'http://sug.music.baidu.com/info/suggestion?      format=json&amp;word=ni&amp;version=2&amp;from=0&amp;callback=?'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(data)</span><br><span class="line"> &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>方案二：</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">自定义函数名</span><br><span class="line">&lt;script src=<span class="string">"http://cdn.bootcss.com/jquery/2.1.0-rc1/jquery.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url:<span class="string">'http://sug.music.baidu.com/info/suggestion?format=json&amp;word=ni&amp;version=2&amp;from=0&amp;callback=?'</span>,</span><br><span class="line">dataType:<span class="string">'jsonp'</span>,</span><br><span class="line">jsonpCallback:<span class="string">'test'</span>, <span class="comment">//自定义回调的函数名</span></span><br><span class="line">success:<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(response)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="4、用原生方法解决跨域问题"><a href="#4、用原生方法解决跨域问题" class="headerlink" title="4、用原生方法解决跨域问题"></a>4、用原生方法解决跨域问题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>); </span><br><span class="line">script.src=<span class="string">'http://sug.music.baidu.com/info/suggestion?format=json&amp;word=ni&amp;version=2&amp;from=0&amp;callback=baidu'</span>;</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(script);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">baidu</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、Ajax-PHP-跨域问题（服务端方案）&quot;&gt;&lt;a href=&quot;#1、Ajax-PHP-跨域问题（服务端方案）&quot; class=&quot;headerlink&quot; title=&quot;1、Ajax + PHP 跨域问题（服务端方案）&quot;&gt;&lt;/a&gt;1、Ajax + PHP 跨域问题（
      
    
    </summary>
    
      <category term="Javascript" scheme="http://yoursite.com/categories/Javascript/"/>
    
    
      <category term="跨域" scheme="http://yoursite.com/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
</feed>
